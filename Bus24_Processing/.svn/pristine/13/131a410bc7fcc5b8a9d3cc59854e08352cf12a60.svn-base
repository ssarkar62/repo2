package com.bus24.service;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Service;

import com.bus24.beans.Response;
import com.bus24.beans.Route;
import com.bus24.beans.SearchedBooking;
import com.bus24.beans.Travel;
import com.bus24.dao.BookingDAO;
import com.bus24.util.JsonUtil;
import com.bus24.util.StatusUtil;

@Service
public class BookingServiceImpl implements BookingService {
	private static Logger logger = Logger.getLogger(BookingServiceImpl.class);
	@Autowired
	private BookingDAO bookingDAO;

	public String boardingPoints(String jsonRouteId) {
		String jsonResponse = "";
		logger.info("Entered into Showmyprofile : " + jsonRouteId);

		Response response = new Response();
		response.setStatus(StatusUtil.STATUS_FAILURE);
		response.setMessage("Registration is Failure!Please Try Again");

		try {// handle exceptions
			Route route = JsonUtil.convertJsonToJava(jsonRouteId, Route.class);
			Integer routeId = route.getRouteId();
			route = bookingDAO.bordingPoints(routeId);
			if (route != null) {
				jsonResponse = JsonUtil.convertJavaToJson(route);
				response.setMessage("Boarding points sent");
				response.setStatus(StatusUtil.STATUS_SUCCESS);
				response.setData(jsonResponse);
				return jsonResponse;
			}
		} catch (DataAccessException e) {
			e.printStackTrace();
			response.setStatus(StatusUtil.STATUS_FAILURE);
			response.setMessage("Unable to process!Please Try Again");
			logger.error("Exception Occured while User Login ::" + e.getMessage());

		}

		catch (Exception e) {
			e.printStackTrace();
			response.setStatus(StatusUtil.STATUS_FAILURE);
			response.setMessage("Unable to process!Please Try Again");
			logger.error("Exception Occured while User Login ::" + e.getMessage());

		}

		return jsonResponse;

	}

	@Override
	public String searchBookings() {
		String jsonResponse="";
	
		Response response = new Response();
		response.setMessage("Could not Fetch Booking Details!Please Try Again.");
		response.setStatus(StatusUtil.STATUS_FAILURE);
		try{
		List<SearchedBooking> list=bookingDAO.searchBookings();
		
		if(list!=null && list.size()>0)	{
			jsonResponse=JsonUtil.convertJavaToJson(list);
			if (jsonResponse != null) {
				
				response.setStatus(StatusUtil.STATUS_SUCCESS);
				response.setMessage("Bookings List Fetched");
				response.setData(jsonResponse);

			} else {
				logger.error("bookings list conversion from list to json failed");
			}
		}//if
		else{
			response.setMessage("Bookings Details Not Found");
			response.setStatus(StatusUtil.STATUS_FAILURE);
		}
			
		}//try
		catch (DataAccessException de) {
			logger.info("Exception Occured while Fetching Booking Details : " + de.getMessage());

			response.setMessage("Unable to Process Your Request!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);

		} catch (Exception e) {
			logger.info("Exception Occured while Fetching Booking Details: " + e.getMessage());

			response.setMessage("Unable to Process Your Request!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);
		}
		

		logger.info(jsonResponse);
		return jsonResponse;
	}

	


	@Override
	public String searchBookings(String jsontravelId) {
		  
	    String jsonResponse="";
		Response response = new Response();
		response.setMessage("Could not Fetch Booking Details!Please Try Again.");
		response.setStatus(StatusUtil.STATUS_FAILURE);
		try{
			
		    Travel travel=JsonUtil.convertJsonToJava(jsontravelId, Travel.class);
		    		Integer travelId = travel.getTravelId(); 		
			List<SearchedBooking> list=bookingDAO.searchBookings(travelId);
			if(list!=null && list.size()>0){
				 jsonResponse=JsonUtil.convertJavaToJson(list);
				if (jsonResponse != null) {
					response.setStatus(StatusUtil.STATUS_SUCCESS);
					response.setMessage("Bookings List Fetched");
					response.setData(jsonResponse);

			}//if closed
			else{
				logger.error("bookings list conversion from list to json failed");
			}//else closed
		}// First if 
		else{
			response.setMessage("Bookings Details Not Found");
			response.setStatus(StatusUtil.STATUS_FAILURE);
			}	
		}catch (DataAccessException de) {
			logger.info("Exception Occured while Fetching Booking Details : " + de.getMessage());

			response.setMessage("Unable to Process Your Request!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);

		} catch (Exception e) {
			logger.info("Exception Occured while Fetching Booking Details: " + e.getMessage());

			response.setMessage("Unable to Process Your Request!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);
		}

		return jsonResponse;
	}

	@Override
	public String searchBookings(String jsonFromDate, String jsonToDate) {
		 String jsonResponse="";
		 
			Response response = new Response();
			response.setMessage("Could not Fetch Booking Details!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);
			try{
				DateFormat df=new SimpleDateFormat("MM/dd/yyyy");
				Date fDate=df.parse(jsonFromDate);
				Date tDate=df.parse(jsonToDate);
			     		
				List<SearchedBooking> list=bookingDAO.searchBookings(fDate,tDate);
				if(list!=null && list.size()>0){
					 jsonResponse=JsonUtil.convertJavaToJson(list);
					if (jsonResponse != null) {
						response.setStatus(StatusUtil.STATUS_SUCCESS);
						response.setMessage("Bookings List Fetched");
						response.setData(jsonResponse);

				}//if closed
				else{
					logger.error("bookings list conversion from list to json failed");
				}//else closed
			}// First if 
			else{
				response.setMessage("Bookings Details Not Found");
				response.setStatus(StatusUtil.STATUS_FAILURE);
				}	
			}
           catch (DataAccessException de) {
				logger.info("Exception Occured while Fetching Booking Details : " + de.getMessage());

				response.setMessage("Unable to Process Your Request!Please Try Again.");
				response.setStatus(StatusUtil.STATUS_FAILURE);

			} catch (Exception e) {
				logger.info("Exception Occured while Fetching Booking Details: " + e.getMessage());

				response.setMessage("Unable to Process Your Request!Please Try Again.");
				response.setStatus(StatusUtil.STATUS_FAILURE);
			}

			return jsonResponse;

			
		}

	@Override
	public String searchBookings(String jsonTravelId, String jsonFromDate, String jsonToDate) {
		 String jsonResponse="";
		 
			Response response = new Response();
			response.setMessage("Could not Fetch Booking Details!Please Try Again.");
			response.setStatus(StatusUtil.STATUS_FAILURE);
			try{
				DateFormat df=new SimpleDateFormat("MM/dd/yyyy");
				Date fDate=df.parse(jsonFromDate);
				Date tDate=df.parse(jsonToDate);
				
				Travel travel=JsonUtil.convertJsonToJava(jsonTravelId, Travel.class);
	    		Integer travelId = travel.getTravelId();
			     		
				List<SearchedBooking> list=bookingDAO.searchBookings(travelId,fDate,tDate);
				if(list!=null && list.size()>0){
					 jsonResponse=JsonUtil.convertJavaToJson(list);
					if (jsonResponse != null) {
						response.setStatus(StatusUtil.STATUS_SUCCESS);
						response.setMessage("Bookings List Fetched");
						response.setData(jsonResponse);

				}//if closed
				else{
					logger.error("bookings list conversion from list to json failed");
				}//else closed
			}// First if 
			else{
				response.setMessage("Bookings Details Not Found");
				response.setStatus(StatusUtil.STATUS_FAILURE);
				}	
			}
        catch (DataAccessException de) {
				logger.info("Exception Occured while Fetching Booking Details : " + de.getMessage());

				response.setMessage("Unable to Process Your Request!Please Try Again.");
				response.setStatus(StatusUtil.STATUS_FAILURE);

			} catch (Exception e) {
				logger.info("Exception Occured while Fetching Booking Details: " + e.getMessage());

				response.setMessage("Unable to Process Your Request!Please Try Again.");
				response.setStatus(StatusUtil.STATUS_FAILURE);
			}

			return jsonResponse;

			
	}

	
		
	

	
}
